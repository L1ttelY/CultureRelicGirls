<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WX-WASM-SDK-Runtime</name>
    </assembly>
    <members>
        <member name="T:WeChatWASM.Cloud">
            <summary>
            云函数，调用前必须先Init初始化
            </summary>
        </member>
        <member name="M:WeChatWASM.Cloud.Init(WeChatWASM.CallFunctionInitParam)">
            <summary>
            初始化，详见 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/init/client.init.html
            </summary>
            <param name="param"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.Cloud.CallFunction(WeChatWASM.CallFunctionParam)" -->
        <member name="T:WeChatWASM.WX">
            <summary>
            微信SDK对外暴露的API
            </summary>
        </member>
        <member name="P:WeChatWASM.WX.env">
            <summary>
            微信提供了一个用户文件目录给开发者，开发者对这个目录有完全自由的读写权限。通过 WX.env.USER_DATA_PATH 可以获取到这个目录的路径。
            </summary>
        </member>
        <member name="P:WeChatWASM.WX.cloud">
            <summary>
            云函数
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.InitSDK(System.Action{System.Int32})">
            <summary>
            初始化SDK
            </summary>
            <param name="callback">初始化完毕后回调，请回调后再执行游戏主逻辑</param>
        </member>
        <member name="M:WeChatWASM.WX.ReportGameStart">
            <summary>
            游戏开始运行时上报
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WX.SetGameStage(System.Int32)" -->
        <member name="M:WeChatWASM.WX.ReportGameStageCostTime(System.Int32,System.String)">
            <summary>
            上报当前自定义阶段耗时
            </summary>
            <param name="costTime">自定义阶段耗时，没有就传0</param>
            <param name="extJsonStr">上报的额外信息，json序列化字符串</param>
        </member>
        <member name="M:WeChatWASM.WX.ReportGameStageError(System.Int32,System.String,System.String)">
            <summary>
            上报当前自定义阶段错误信息
            </summary>
            <param name="errorType">错误类型, 取值范围0-10000</param>
            <param name="errStr">错误信息</param>
            <param name="extJsonStr">上报的额外信息，json序列化字符串</param>
        </member>
        <member name="M:WeChatWASM.WX.WriteLog(System.String)">
            <summary>
            向日志管理器中写log
            日志管理器文档：https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.html
            </summary>
            <param name="str">log信息</param>
        </member>
        <member name="M:WeChatWASM.WX.WriteWarn(System.String)">
            <summary>
            向日志管理器中写warn
            日志管理器文档：https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.html
            </summary>
            <param name="str">warn信息</param>
        </member>
        <member name="M:WeChatWASM.WX.ReportUserBehaviorBranchAnalytics(System.String,System.String,System.Int32)">
            <summary>
            用于分支相关的UI组件（一般是按钮）相关事件的上报，事件目前有曝光、点击两种
            </summary>
            <param name="branchId">分支ID，在「小程序管理后台」获取</param>
            <param name="branchDim">自定义维度</param>
            <param name="eventType">事件类型，1：曝光； 2：点击</param>
        </member>
        <member name="M:WeChatWASM.WX.GetUserInfo(System.Boolean,System.String,System.Action{WeChatWASM.WXUserInfoResponse},System.Action{WeChatWASM.WXUserInfoResponse},System.Action{WeChatWASM.WXUserInfoResponse})">
            <summary>
            获取用户信息。调用前需要调用 WX.Authorize 用户授权 scope.userInfo。详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/wx.getUserInfo.html
            </summary>
            <param name="withCredentials">是否带上登录态信息。当 withCredentials 为 true 时，要求此前有调用过 wx.login 且登录态尚未过期，此时返回的数据会包含 encryptedData, iv 等敏感信息；当 withCredentials 为 false 时，不要求有登录态，返回的数据不包含 encryptedData, iv 等敏感信息。</param>
            <param name="lang">显示用户信息的语言 可取（en,zh_CN,zh_TW）的一个</param>
            <param name="succCallback">接口调用成功的回调函数</param>
            <param name="failCallback">接口调用失败的回调函数</param>
            <param name="compCallback">接口调用结束的回调函数（调用成功、失败都会执行）</param>
        </member>
        <member name="M:WeChatWASM.WX.CreateUserInfoButton(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            创建用户信息按钮,这里是在屏幕上额外创建一块透明区域，其为点击区域，用户点击后，就会请求用户授权获取用户信息。游戏中的该区域最好为按钮区域，这样就能看起来用户是在点击游戏中的按钮
            </summary>
            <param name="x">x 左上角横坐标（以屏幕左上角为0）</param>
            <param name="y">y 左上角纵坐标（以屏幕左上角为0）</param>
            <param name="width">区域宽度</param>
            <param name="height">区域高度</param>
            <param name="lang">显示用户信息的语言 可取（en,zh_CN,zh_TW）的一个</param>
            <param name="withCredentials">是否带上登录态信息。当 withCredentials 为 true 时，要求此前有调用过 wx.login 且登录态尚未过期，此时返回的数据会包含 encryptedData, iv 等敏感信息；当 withCredentials 为 false 时，不要求有登录态，返回的数据不包含 encryptedData, iv 等敏感信息。</param>
            <returns>返回对象用于后续控制该透明区域的点击，展示和隐藏等行为</returns>
        </member>
        <member name="M:WeChatWASM.WX.GetSystemLanguage">
            <summary>
            获取微信客户端语言
            </summary>
            <returns>返回值同Application.systemLanguage.ToString(), 但是因为ios中 Application.systemLanguage.ToString()返回数值类型的字符串，所以增加一个返回字母类型字符串的函数，而且该值跟随微信语言设置</returns>
        </member>
        <member name="M:WeChatWASM.WX.GetSystemInfo(WeChatWASM.WXBaseActionParam{WeChatWASM.WXSystemInfo})">
            <summary>
            异步获取系统信息,Unity的Application.platform返回的是WebGLPlayer区分不了平台，可以通过这个api来区分平台
            </summary>
            <param name="param">回调函数，回调参数可参考 https://developers.weixin.qq.com/minigame/dev/api/base/system/system-info/wx.getSystemInfo.html </param>
        </member>
        <member name="M:WeChatWASM.WX.GetSystemInfoSync">
            <summary>
            同步版本获取系统信息,Unity的Application.platform返回的是WebGLPlayer区分不了平台，可以通过这个api来区分平台
            </summary>
            <param name="param">回调函数，回调参数可参考 https://developers.weixin.qq.com/minigame/dev/api/base/system/system-info/wx.getSystemInfo.html </param>
            
        </member>
        <member name="M:WeChatWASM.WX.OnAudioInterruptionBegin(System.Action)">
            <summary>
            监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天。此事件触发后，小程序内所有音频会暂停。
            </summary>
            <param name="action">音频因为受到系统占用而被中断开始事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OnAudioInterruptionEnd(System.Action)">
            <summary>
            监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功
            </summary>
            <param name="action">音频中断结束事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffAudioInterruptionEnd(System.Action)">
            <summary>
            取消监听音频中断结束事件
            </summary>
            <param name="action">音频中断结束事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffAudioInterruptionBegin(System.Action)">
            <summary>
            取消监听音频因为受到系统占用而被中断开始事件
            </summary>
            <param name="action">音频因为受到系统占用而被中断开始事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.UpdateShareMenu(WeChatWASM.WXUpdateShareMenuParam)">
            <summary>
            更新转发属性
            </summary>
            <param name="param">param各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/share/wx.updateShareMenu.html  </param>
        </member>
        <member name="M:WeChatWASM.WX.ShowShareMenu(WeChatWASM.WXShowShareMenuParam)">
            <summary>
            显示当前页面的转发按钮
            </summary>
            <param name="param">param各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/share/wx.showShareMenu.html  </param>
        </member>
        <member name="M:WeChatWASM.WX.HideShareMenu(WeChatWASM.WXHideShareMenuParam)">
            <summary>
            隐藏当前页面的转发按钮
            </summary>
            <param name="param">param各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/share/wx.hideShareMenu.html </param>
        </member>
        <member name="M:WeChatWASM.WX.SetMessageToFriendQuery(System.Int32)">
            <summary>
            设置 ShareMessageToFriend 接口 query 字段的值
            </summary>
            <param name="shareMessageToFriendScene">需要传递的代表场景的数字，需要在 0 - 50 之间。 1-50都是开发者自定义场景值，用法可以自行决定的 。</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:WeChatWASM.WX.ShareAppMessage(WeChatWASM.WXShareAppMessageParam)">
            <summary>
            主动拉起转发，进入选择通讯录界面。
            </summary>
            <param name="param">param各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/share/wx.shareAppMessage.html </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WX.OnShareAppMessage(WeChatWASM.WXShareAppMessageParam,System.Action{System.Action{WeChatWASM.WXShareAppMessageParam}})" -->
        <member name="M:WeChatWASM.WX.OffShareAppMessage">
            <summary>
            取消监听用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WX.OnShareTimeline(WeChatWASM.WXShareTimelineParam,System.Action)" -->
        <member name="M:WeChatWASM.WX.OffShareTimeline">
            <summary>
            取消监听用户点击右上角菜单的「分享到朋友圈」按钮时触发的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.OnAddToFavorites(WeChatWASM.WXAddToFavoritesParam,System.Action)">
            <summary>
            监听用户点击菜单「收藏」按钮时触发的事件（安卓7.0.15起支持，iOS 暂不支持）
            </summary>
            <param name="param">详见 https://developers.weixin.qq.com/minigame/dev/api/share/wx.onAddToFavorites.html</param>
            <param name="action">用户点击菜单「收藏」按钮时触发的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffAddToFavorites">
            <summary>
            取消监听用户点击菜单「收藏」按钮时触发的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.GetShareInfo(WeChatWASM.WXGetShareInfoParam)">
            <summary>
            获取转发详细信息
            </summary>
            <param name="param">设置详见 https://developers.weixin.qq.com/minigame/dev/api/share/wx.getShareInfo.html </param>
        </member>
        <member name="M:WeChatWASM.WX.AuthPrivateMessage(WeChatWASM.WXAuthPrivateMessageParam)">
            <summary>
            验证私密消息。用法详情见 小程序私密消息使用指南 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/private-message.html
            </summary>
            <param name="param">设置详见 https://developers.weixin.qq.com/minigame/dev/api/share/wx.authPrivateMessage.html</param>
        </member>
        <member name="M:WeChatWASM.WX.CreateBannerAd(WeChatWASM.WXCreateBannerAdParam)">
            <summary>
            banner 广告组件。banner 广告组件是一个原生组件，层级比普通组件高。banner 广告组件默认是隐藏的，需要调用 BannerAd.show() 将其显示。banner 广告会根据开发者设置的宽度进行等比缩放，缩放后的尺寸将通过 BannerAd.onResize() 事件中提供。 使用可参考 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/banner-ad.html
            </summary>
            <param name="param">param各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createBannerAd.html </param>
            <returns>对banner广告做操作的对象，详见 https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.html </returns>
            <example>
            // 底部banner广告示例
                   var sysInfo = WX.GetSystemInfoSync();
                    var banner = WX.CreateBannerAd(new WXCreateBannerAdParam()
                    {
                        adUnitId = "adunit-2e20328227ca771b",
                       adIntervals = 30,
                        style = new Style()
                        {
                            left = 0,
                            top = sysInfo.windowHeight - 100,
                            width = sysInfo.windowWidth,
                            height = 100
                        }
                   });
                    banner.OnError((WXADErrorResponse res)=>
                    {
                        Debug.Log("bannerad error response");
                    });
                    banner.OnLoad(()=> {
                        banner.Show();
                    });
                banner.OnResize((WXADResizeResponse res) =>
                {
                    //拉取的广告可能跟设置的不一样，需要动态调整位置
                    banner.style.top = sysInfo.windowHeight - res.height;
                }); 
            </example>
        </member>
        <member name="M:WeChatWASM.WX.CreateFixedBottomMiddleBannerAd(System.String,System.Int32,System.Int32)">
            <summary>
            这个方法提供一个固定在底部,且固定高度，且水平居中的bannerAd,此方法不需要再手动监听OnResize事件调整位置了
            </summary>
            <param name="adUnitId">广告单元 id</param>
            <param name="adIntervals">广告自动刷新的间隔时间，单位为秒，参数值必须大于等于30（该参数不传入时 Banner 广告不会自动刷新）</param>
            <param name="height">要固定的高度</param>
            <returns>对banner广告做操作的对象，详见 https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.CreateRewardedVideoAd(WeChatWASM.WXCreateRewardedVideoAdParam)">
            <summary>
            激励视频广告 详细参见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/rewarded-video-ad.html
            </summary>
            <param name="param"></param>
            <returns>广告操作对象，https://developers.weixin.qq.com/minigame/dev/api/ad/RewardedVideoAd.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.CreateInterstitialAd(WeChatWASM.WXCreateInterstitialAdParam)">
            <summary>
            创建插屏广告组件 详细参见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createInterstitialAd.html
            </summary>
            <param name="param"></param>
            <returns>广告操作对象，https://developers.weixin.qq.com/minigame/dev/api/ad/InterstitialAd.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.CreateGridAd(WeChatWASM.WXCreateGridAdParam)">
            <summary>
            Grid 广告 详细参见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/grid-ad.html
            </summary>
            <param name="param">详细参见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createGridAd.html </param>
            <returns>广告操作对象，https://developers.weixin.qq.com/minigame/dev/api/ad/GridAd.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.CreateCustomAd(WeChatWASM.WXCreateCustomAdParam)">
            <summary>
            创建原生模板广告组件 详细参见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createCustomAd.html
            </summary>
            <param name="param"></param>
            <returns>广告操作对象，https://developers.weixin.qq.com/minigame/dev/api/ad/CustomAd.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.OnShow(System.Action{WeChatWASM.WXOnShowResponse})">
            <summary>
            监听小游戏回到前台的事件
            </summary>
            <param name="action">小游戏回到前台的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffShow(System.Action{WeChatWASM.WXOnShowResponse})">
            <summary>
            取消监听小游戏回到前台的事件
            </summary>
            <param name="action">小游戏回到前台的事件的回调函数,为空的话会取消之前添加的全部监听</param>
        </member>
        <member name="M:WeChatWASM.WX.OnHide(System.Action)">
            <summary>
            监听小游戏隐藏到后台事件。锁屏、按 HOME 键退到桌面、显示在聊天顶部等操作会触发此事件。
            </summary>
            <param name="action">小游戏隐藏到后台事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffHide(System.Action)">
            <summary>
            取消监听小游戏隐藏到后台事件
            </summary>
            <param name="action">小游戏隐藏到后台事件的回调函数,为空的话会取消之前添加的全部监听</param>
        </member>
        <member name="M:WeChatWASM.WX.GetLaunchOptionsSync">
            <summary>
            获取小游戏冷启动时的参数。热启动参数通过 OnShow 接口获取。
            </summary>
            <returns>返回数据详见，https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html </returns>
        </member>
        <member name="M:WeChatWASM.WX.GetFileSystemManager">
            <summary>
            获取全局唯一的文件管理器 详见 https://developers.weixin.qq.com/minigame/dev/guide/base-ability/file-system.html
            </summary>
            <returns>返回数据详见，https://developers.weixin.qq.com/minigame/dev/api/file/wx.getFileSystemManager.html </returns>
            <example>
            // 在本地用户文件目录下创建一个文件 share.jpg,文件名可以自己随便取，写入内容为图片二进制内容 bytes
             var fs = WX.GetFileSystemManager();
             fs.WriteFileSync(WX.env.USER_DATA_PATH+"/share.jpg", bytes);
            </example>
        </member>
        <member name="M:WeChatWASM.WX.GetOpenDataContext">
            <summary>
            获取开放数据域，关系链相关可以参看 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/open-data.html
            </summary>
            <returns>开放数据域对象</returns>
        </member>
        <member name="M:WeChatWASM.WX.ShowOpenData(UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            展示开放数据域
            </summary>
            <param name="texture">用来占位的纹理，前端绘制的开放域数据会自动替换这一纹理，因为客户顿纹理映射倒立问题，这一纹理请设置rotationX为180才能正常展示。</param>
            <param name="x">占位对应屏幕左上角横坐标</param>
            <param name="y">占位对应屏幕左上角纵坐标，注意左上角为（0，0）</param>
            <param name="width">占位对应的宽度</param>
            <param name="height">占位对应的高度</param>
        </member>
        <member name="M:WeChatWASM.WX.HideOpenData">
            <summary>
            关闭开放数据域
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.SetUserCloudStorage(WeChatWASM.SetUserCloudStorageParam)">
            <summary>
            对用户托管数据进行写数据操作。允许同时写多组 KV 数据。详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.setUserCloudStorage.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WX.RemoveUserCloudStorage(WeChatWASM.RemoveUserCloudStorageParam)">
            <summary>
            删除用户托管数据当中对应 key 的数据。 详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.removeUserCloudStorage.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WX.UpdateKeyboard(WeChatWASM.WXUpdateKeyboardParam)">
            <summary>
            更新键盘输入框内容。只有当键盘处于拉起状态时才会产生效果,https://developers.weixin.qq.com/minigame/dev/api/ui/keyboard/wx.updateKeyboard.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.ShowKeyboard(WeChatWASM.WXShowKeyboardParam)">
            <summary>
            显示键盘,https://developers.weixin.qq.com/minigame/dev/api/ui/keyboard/wx.showKeyboard.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.HideKeyboard(WeChatWASM.WXBaseActionParam{WeChatWASM.WXTextResponse})">
            <summary>
            隐藏键盘,https://developers.weixin.qq.com/minigame/dev/api/ui/keyboard/wx.hideKeyboard.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WX.OnKeyboardInput(System.Action{System.String})">
            <summary>
            监听键盘输入事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OnKeyboardConfirm(System.Action{System.String})">
            <summary>
            监听用户点击键盘 Confirm 按钮时的事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OnKeyboardComplete(System.Action{System.String})">
            <summary>
            监听监听键盘收起的事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OffKeyboardInput(System.Action{System.String})">
            <summary>
            取消监听键盘输入事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OffKeyboardConfirm(System.Action{System.String})">
            <summary>
            取消监听用户点击键盘 Confirm 按钮时的事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OffKeyboardComplete(System.Action{System.String})">
            <summary>
            取消监听监听键盘收起的事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WX.OnTouchStart(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            监听开始触摸事件
            </summary>
            <param name="action">开始触摸事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OnTouchEnd(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            监听触摸结束事件
            </summary>
            <param name="action">触摸结束事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OnTouchMove(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            监听触点移动事件
            </summary>
            <param name="action">触点移动事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffTouchStart(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            取消监听开始触摸事件
            </summary>
            <param name="action">开始触摸事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffTouchEnd(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            取消监听触摸结束事件
            </summary>
            <param name="action">触摸结束事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WX.OffTouchMove(System.Action{WeChatWASM.TouchEvent})">
            <summary>
            取消监听触点移动事件
            </summary>
            <param name="action">触点移动事件的回调函数</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WX.CreateInnerAudioContext(WeChatWASM.InnerAudioContextParam)" -->
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WX.PreDownloadAudios(System.String[],System.Action{System.Int32})" -->
        <member name="T:WeChatWASM.WXBannerAd">
            <summary>
            Banner 广告,详见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/banner-ad.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.OnResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            监听 banner 广告尺寸变化事件。
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.OffResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            取消监听 banner 广告尺寸变化事件
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.Hide">
            <summary>
            隐藏 banner 广告。
            </summary>
        </member>
        <member name="T:WeChatWASM.WXBaseAd">
            <summary>
            广告的基类
            </summary>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.Show(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXTextResponse})">
            <summary>
            显示广告。
            </summary>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OnError(System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            监听广告错误事件。
            </summary>
            <param name="action">广告错误事件的回调函数,可详见 https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.onError.html</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OnLoad(System.Action)">
            <summary>
            监听 banner 广告加载事件。
            </summary>
            <param name="action">广告加载事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OffError(System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            取消监听广告错误事件
            </summary>
            <param name="action">广告错误事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OffLoad(System.Action)">
            <summary>
            取消监听广告加载事件
            </summary>
            <param name="action">广告加载事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.Destroy">
            <summary>
            销毁广告,如果是激励视频广告且multiton参数默认设置为false,则请慎用Destroy,调用后，后续可能无法再创建激励视频广告
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCanvas">
            <summary>
            调用客户端的canvas
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCanvas.ToTempFilePathSync(WeChatWASM.WXToTempFilePathParam)">
            <summary>
            同步的将当前 Canvas 保存为一个临时文件
            </summary>
            <returns>canvas 生成的临时文件路径 (本地路径)</returns>
        </member>
        <member name="T:WeChatWASM.WXCustomAd">
            <summary>
            插屏广告组件广告,详见 https://developers.weixin.qq.com/minigame/dev/api/ad/CustomAd.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OnClose(System.Action)">
            <summary>
            监听广告关闭事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OffClose(System.Action)">
            <summary>
            取消监听广告关闭事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.Hide(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXTextResponse})">
            <summary>
            隐藏原生模板广告。（某些模板广告无法隐藏）
            </summary>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="P:WeChatWASM.WXEnv.USER_DATA_PATH">
            <summary>
            微信提供了一个用户文件目录给开发者，开发者对这个目录有完全自由的读写权限。通过 WX.env.USER_DATA_PATH 可以获取到这个目录的路径。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFileSync(System.String,System.String,System.String)">
            <summary>
            同步写文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeFileSync.html
            </summary>
            <param name="filePath">要写入的文件路径 (本地路径)</param>
            <param name="data">要写入的文本</param>
            <param name="encoding">指定写入文件的字符编码</param>
            <returns>错误信息，如果成功的话返回ok</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFileSync(System.String,System.Byte[])">
            <summary>
            同步写文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeFileSync.html
            </summary>
            <param name="filePath">要写入的文件路径 (本地路径)</param>
            <param name="bytes">要写入的二进制数据</param>
            <returns>错误信息，如果成功的话返回ok</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.AccessSync(System.String)">
            <summary>
            同步判断文件/目录是否存在 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.accessSync.html
            </summary>
            <param name="path">要判断是否存在的文件/目录路径 (本地路径)</param>
            <returns>成功返回 "access:ok" 其他为失败，不可访问</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Access(WeChatWASM.AccessParam)">
            <summary>
            判断文件/目录是否存在 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.access.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.CopyFileSync(System.String,System.String)">
            <summary>
            同步复制文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFileSync.html
            </summary>
            <param name="srcPath">源文件路径，支持本地路径</param>
            <param name="destPath">目标文件路径，支持本地路径</param>
            <returns>成功返回 "copyFile:ok" 其他为失败</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.CopyFile(WeChatWASM.CopyFileParam)">
            <summary>
            复制文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.UnlinkSync(System.String)">
            <summary>
            同步删除文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlinkSync.html
            </summary>
            <param name="filePath">源文件路径，支持本地路径</param>
            <returns>成功返回 "unlink:ok" 其他为失败</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Unlink(WeChatWASM.UnlinkParam)">
            <summary>
            删除文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlink.html 
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:WeChatWASM.WXGridAd">
            <summary>
            Grid 广告 详见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/grid-ad.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXGridAd.OnResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            监听 Grid 广告尺寸变化事件。
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXGridAd.OffResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            取消监听 Grid 广告尺寸变化事件
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXGridAd.Hide">
            <summary>
            隐藏 Grid 广告。
            </summary>
        </member>
        <member name="T:WeChatWASM.WXInnerAudioContext">
            <summary>
            音频类，详见 https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.autoplay">
            <summary>
            是否自动开始播放，默认为 false
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.src">
            <summary>
            音频资源的地址，用于直接播放。可以设置为网络地址，或者unity中的本地路径如 Assets/xx.wav，运行时会自动和配置的音频地址前缀做拼接得到最终线上地址
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.startTime">
            <summary>
            开始播放的位置（单位：s），默认为 0
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.loop">
            <summary>
            是否循环播放，默认为 false
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.volume">
            <summary>
            音量。范围 0~1。默认为 1
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.playbackRate">
            <summary>
            播放速度。范围 0.5-2.0，默认为 1。（Android 需要 6 及以上版本）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.duration">
            <summary>
            当前音频的长度（单位 s）。只有在当前有合法的 src 时返回（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.currentTime">
            <summary>
            当前音频的播放位置（单位 s）。只有在当前有合法的 src 时返回，时间保留小数点后 6 位（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.buffered">
            <summary>
            当前音频的播放位置（单位 s）。只有在当前有合法的 src 时返回，时间保留小数点后 6 位（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.paused">
            <summary>
            当前是是否暂停或停止状态（只读）
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Play">
            <summary>
            播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Pause">
            <summary>
            暂停。暂停后的音频再播放会从暂停处开始播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Stop">
            <summary>
            停止。停止后的音频再播放会从头开始播放。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Seek(System.Single)">
            <summary>
            跳转到指定位置
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Destroy">
            <summary>
            销毁当前实例
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnCanplay(System.Action)">
            <summary>
            监听音频进入可以播放状态的事件。但不保证后面可以流畅播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffCanplay(System.Action)">
            <summary>
            监听音频进入可以播放状态的事件。但不保证后面可以流畅播放,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnPlay(System.Action)">
            <summary>
            监听音频播放事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffPlay(System.Action)">
            <summary>
            取消监听音频播放事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnPause(System.Action)">
            <summary>
            监听音频暂停事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffPause(System.Action)">
            <summary>
            取消监听音频暂停事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnStop(System.Action)">
            <summary>
            监听音频暂停事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffStop(System.Action)">
            <summary>
            取消监听音频暂停事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnEnded(System.Action)">
            <summary>
            监听音频自然播放至结束的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffEnded(System.Action)">
            <summary>
            取消监听音频自然播放至结束的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnTimeUpdate(System.Action)">
            <summary>
            监听音频播放进度更新事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffTimeUpdate(System.Action)">
            <summary>
            取消监听音频播放进度更新事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnError(System.Action)">
            <summary>
            监听音频播放错误事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffError(System.Action)">
            <summary>
            取消监听音频播放错误事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnWaiting(System.Action)">
            <summary>
            监听音频加载中事件。当音频因为数据不足，需要停下来加载时会触发
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffWaiting(System.Action)">
            <summary>
            取消监听音频加载中事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnSeeking(System.Action)">
            <summary>
            监听音频进行跳转操作的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffSeeking(System.Action)">
            <summary>
            取消监听音频进行跳转操作的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnSeeked(System.Action)">
            <summary>
            监听音频完成跳转操作的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffSeeked(System.Action)">
            <summary>
            取消监听音频完成跳转操作的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.Load(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            加载插屏广告
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.OnClose(System.Action)">
            <summary>
            监听插屏广告关闭事件
            </summary>
            <param name="action">插屏广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.OffClose(System.Action)">
            <summary>
            取消监听插屏广告关闭事件
            </summary>
            <param name="action">插屏广告关闭事件的回调函数</param>
        </member>
        <member name="F:WeChatWASM.WXRewardedVideoAdOnCloseResponse.isEnded">
            <summary>
            视频是否是在用户完整观看的情况下被关闭的,详见 https://developers.weixin.qq.com/minigame/dev/api/ad/RewardedVideoAd.onClose.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXOnShowResponse">
            <summary>
            小游戏回到前台的事件的回调函数里返回的数据,详见 https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXOnShowResponse.queryRaw">
            <summary>
            JS版里的query对象序列化成的JSON字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.WXOnShowResponse.referrerInfoRaw">
            <summary>
            该字段没用
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCloudCallFunctionResponse">
            <summary>
            云函数回调 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/functions/Cloud.callFunction.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCloudCallFunctionResponse.result">
            <summary>
            后端返回的经过json序列化后的数据
            </summary>
        </member>
        <member name="F:WeChatWASM.ReferrerInfo.extraDataRaw">
            <summary>
            对应JS版里的 extraData，这里序列化成JSON字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.WXUserInfo.nickName">
            <summary>
            详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/UserInfo.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXSystemInfo">
            <summary>
            系统信息。详见 https://developers.weixin.qq.com/minigame/dev/api/base/system/system-info/wx.getSystemInfo.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXSystemInfo.platform">
            <summary>
            android下为“android”，ios为 “ios”，开发工具为“devtools”
            </summary>
        </member>
        <member name="T:WeChatWASM.WXUpdateShareMenuParam">
            <summary>
            各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/share/wx.updateShareMenu.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXUpdateShareMenuParam.templateInfoRaw">
            <summary>
             // 该字段不需要传
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateBannerAdParam">
            <summary>
            创建 banner 广告组件参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createBannerAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateRewardedVideoAdParam">
            <summary>
            创建激励视频广告组件参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createRewardedVideoAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateInterstitialAdParam">
            <summary>
            创建插屏广告组件参数,参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createInterstitialAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateGridAdParam">
            <summary>
            创建格子广告参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createGridAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateCustomAdParam">
            <summary>
            创建原生模板广告参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createCustomAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.CustomStyle">
            <summary>
            原生模板广告组件的样式
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.left">
            <summary>
            原生模板广告组件的左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.top">
            <summary>
            原生模板广告组件的左上角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.isFixed">
            <summary>
            原生模板广告组件是否固定屏幕位置（不跟随屏幕滚动）, 相当于JS api里的 fixed
            </summary>
        </member>
        <member name="T:WeChatWASM.WXToTempFilePathParam">
            <summary>
            将当前 Canvas 保存为一个临时文件,详见 https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.toTempFilePathSync.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXUpdateKeyboardParam">
            <summary>
            各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/ui/keyboard/wx.updateKeyboard.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXShowKeyboardParam">
            <summary>
            各字段说明详见这里，https://developers.weixin.qq.com/minigame/dev/api/ui/keyboard/wx.showKeyboard.html
            </summary>
        </member>
        <member name="T:WeChatWASM.SetUserCloudStorageParam">
            <summary>
            对用户托管数据进行写数据操作。允许同时写多组 KV 数据。详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.setUserCloudStorage.html
            </summary>
        </member>
        <member name="T:WeChatWASM.KVData">
            <summary>
            详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/data/KVData.html
            </summary>
        </member>
        <member name="T:WeChatWASM.RemoveUserCloudStorageParam">
            <summary>
            删除用户托管数据当中对应 key 的数据。详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/data/wx.removeUserCloudStorage.html
            </summary>
        </member>
        <member name="T:WeChatWASM.AccessParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.access.html
            </summary>
        </member>
        <member name="T:WeChatWASM.UnlinkParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlink.html
            </summary>
        </member>
        <member name="T:WeChatWASM.CopyFileParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFile.html
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.touches">
            <summary>
            当前所有触摸点的列表
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.changedTouches">
            <summary>
            触发此次事件的触摸点列表,可以通过这个知道触发当前通知的事件的位置
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="T:WeChatWASM.Touch">
            <summary>
            在触控设备上的触摸点。这里已做了适配，左下角为（0，0）。详见 https://developers.weixin.qq.com/minigame/dev/api/base/app/touch-event/Touch.html
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.clientX">
            <summary>
            相当于Unity中eventData.position.x
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.clientY">
            <summary>
            相当于Unity中eventData.position.y
            </summary>
        </member>
        <member name="T:WeChatWASM.CallFunctionParam">
            <summary>
            调用云函数 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/functions/Cloud.callFunction.html
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionParam.data">
            <summary>
            这里请将数据json序列化为字符串再赋值到data
            </summary>
        </member>
        <member name="T:WeChatWASM.CallFunctionInitParam">
            <summary>
            云函数初始化 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/init/client.init.html
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionInitParam.env">
            <summary>
            必填，环境ID，指定接下来调用 API 时访问哪个环境的云资源
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionInitParam.traceUser">
            <summary>
            是否在将用户访问记录到用户管理中，在控制台中可见
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.src">
            <summary>
            音频资源的地址，用于直接播放。可以设置为网络地址，或者unity中的本地路径如 Assets/xx.wav，运行时会自动和配置的音频地址前缀做拼接得到最终线上地址
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.loop">
            <summary>
            是否循环播放,默认为 false
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.startTime">
            <summary>
            开始播放的位置（单位：s），默认为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.autoplay">
            <summary>
            是否自动开始播放，默认为 false
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.volume">
            <summary>
            音量。范围 0~1。默认为 1
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.playbackRate">
            <summary>
            播放速度。范围 0.5-2.0，默认为 1。
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.needDownload">
            <summary>
            下载音频，设置为true后，会完全下载后再触发OnCanplay，方便后续音频复用，避免延迟
            </summary>
        </member>
        <member name="M:WeChatWASM.WXOpenDataContext.PostMessage(System.String)">
            <summary>
            向开放数据域发送消息
            </summary>
            <param name="msg">要发送的消息</param>
        </member>
        <member name="T:WeChatWASM.WXRewardedVideoAd">
            <summary>
            激励视频广告，详见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/rewarded-video-ad.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.Load(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            加载激励视频广告
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.OnClose(System.Action{WeChatWASM.WXRewardedVideoAdOnCloseResponse})">
            <summary>
            监听用户点击 关闭广告 按钮的事件。
            </summary>
            <param name="action">用户点击 关闭广告 按钮的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.OffClose(System.Action{WeChatWASM.WXRewardedVideoAdOnCloseResponse})">
            <summary>
            //取消监听用户点击 关闭广告 按钮的事件
            </summary>
            <param name="action">用户点击 关闭广告 按钮的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Destroy">
            <summary>
            销毁用户信息按钮
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Hide">
            <summary>
            隐藏用户信息按钮。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.OffTap">
            <summary>
            取消监听用户信息按钮的点击事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.OnTap(System.Action{WeChatWASM.WXUserInfoResponse})">
            <summary>
            监听用户信息按钮的点击事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Show">
            <summary>
            显示用户信息按钮
            </summary>
        </member>
        <member name="M:LitJson.JsonData.ContainsKey(System.String)">
            <summary>
            Determines whether the json contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate in the json.</param>
            <returns>true if the json contains an element that has the specified key; otherwise, false.</returns>
        </member>
    </members>
</doc>
